@function first($list) {
	@return nth($list, 1);
}

@function last($list) {
	@return nth($list, length($list));
}

// the first item in sass list is number 1
@function slice($list, $start, $end) {
	$temp-list: ();
	$len: length($list);

	$ret: $start * $end;
	$break: false;

	@if $ret > 0 {
		$break: if($start > 0 and $start > $end, true, false);
		@if (not $break) {
			$need-step: if ($start < 0, true, false);
			$start: $start % $len;
			$end: $end % $len;
			@if $need-step {
				$start: $start + 1;
				$end: $end + 1;
			}
			@while $start <= $end {
				$temp-list: append($temp-list, nth($list, $start));
				$start: $start + 1;
			}
		}
	} @else if $ret < 0 {
		$break: if($start < 0, true, false);
		@if (not $break) {
			$end: ($end % $len + 1);
			@while $start <= $end {
				$temp-list: append($temp-list, nth($list, $start));
				$start: $start + 1;
			}
		}
	}

	@return $temp-list;
}

@function last-index($list, $value) {

	$index: null;
	$len: length($list);

	@for $i from 1 through $len {
		@if nth($list, $i) == $value {
			$index: $i;
		}
	}

	@return $index;

}

@function prepend($list, $value) {
	@return join(($value), $list);
}

// alias prepend
@function unshift($list, $value) {
	@return prepend($list, $value);
}

// alias append
@function push($list, $value) {
	@return append($list, $value);
}

@function remove($list, $value) {
	$nth: index($list, $value);
	$len: length($list);
	$ret: ();

	@if ($nth == null) {
		@return $list;
	}

	@for $i from 1 through $len {
		@if $i != $nth {
			$ret: append($ret, nth($list, $i));
		}
	}

	@return $ret;

}

@function remove-nth($list, $nth) {
	$value: nth($list, $nth);
	@return remove($list, $value);
}
